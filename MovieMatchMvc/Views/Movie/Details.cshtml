@model DetailsVM


@* <h2>About @Model.Title:</h2> *@
<main>
    <div class="details-container">
        @* 	<table class="table" >
        <tbody>
        <tr> *@
        @* <td scope="row"> *@
        @* <div class="col-md-4"> *@
            @* <div class="row" style="text-align: center;"></div> *@
            <div class="img-container-details">
                <div class="overlay"></div>
                <img class="backdrop-poster" src="@Model.BackDropPoster" alt="Backdrop poster for @Model.Title" />
                <img class="details-poster" src="@Model.Poster" alt="Poster image for @Model.Title" />
                <div class="details-text">
                 <h5>@Model.Title</h5>
                <div class="description-container">
                       @if (Model.Description.Length > 350){
                    <a class="toggle-description" href="#">
                    <p class="short-description" style="color: antiquewhite">@Model.Description.Substring(0, 350) ....</p>
                    <p class="full-description" style="color: antiquewhite; display: none;">@Model.Description</p>
                    </a>
                       }
                       else {
                    <p style="color: antiquewhite;">@Model.Description</p>
                    }
                    
                </div>
                <div class="genre-container">
                
                    <p>Genre: 
                        @foreach(var genre in Model.Genre)
                        {
                            <span style="color: antiquewhite; margin:5px;"> @genre.Name </span>
                        }
                    </p>
                    
                </div>

                <p> Runtime: @Model.Runtime minutes</p> 
              
                        
            <p>
                Rating: @Math.Round(Model.Rating, 1)
              
            </p>
                @if (Model.ReleaseDate != null)
                {
                  <p> Release Date: @Model.ReleaseDate.Value.ToShortDateString()</p>  
                }
     
        @if (User.Identity.IsAuthenticated)
        {
            <button class="btn @((Model.InWatchList ? "btn-danger" : "btn-success")) watchlist-button" data-movie-id="@Model.Id">
                @(Model.InWatchList ? "Remove from watchlist" : "Add to watchlist")
            </button>
        }
        </div>
            </div>
        </div>
        @* <div class="col-md-4">
            
         
      
        @* </td>
        <td scope="row">

        </td>
        </tr>
        </tbody>
        </table> *@
</main>



@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll('.watchlist-button').forEach(button => {
                button.addEventListener('click', function (e) {
                    const movieId = e.target.getAttribute('data-movie-id');
                    const isInWatchlist = e.target.textContent.trim() === 'Remove from watchlist';

                    fetch(`/ManageWatchList?movieId=${movieId}&remove=${isInWatchlist}&isJsonCall=true`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ movieId })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                e.target.classList.toggle('btn-danger');
                                e.target.classList.toggle('btn-success');
                                e.target.textContent = isInWatchlist ? 'Add to watchlist' : 'Remove from watchlist';
                            }
                        })
                        .catch(error => console.log('Error:', error));
                });
            });
        });
        document.querySelector('.toggle-description').addEventListener('click', function (e) {
            e.preventDefault(); // Prevent default link behavior

            const shortDesc = document.querySelector('.short-description');
            const fullDesc = document.querySelector('.full-description');

            if (fullDesc.style.display === 'none' || fullDesc.style.display === '') {
                shortDesc.style.display = 'none';
                fullDesc.style.display = 'block';
            } else {
                shortDesc.style.display = 'block';
                fullDesc.style.display = 'none';
            }
        });
    </script>
	}