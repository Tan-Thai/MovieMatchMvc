@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model MovieMatchMvc.Views.Movie.WatchlistVM[]

<!DOCTYPE html>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>

	<meta charset="utf-8" />
	<title></title>
</head>
<body>
	<div class="search-bar-container">
		<h3 class="search-bar-title" style="color: antiquewhite; ">My watchlist</h3>

		@*<p style="margin-left:12rem;">Filter:</p>*@
		<div class="search-bar">
			<div id="select">
				<p id="selectText"></p>
				<img id="select-click" src="/Images/arrow.svg" alt="arrow" style="width: 70px !important; height: 70px !important;" />
				<ul id="list">
					<li class="options" data-argument="">All categories</li>
					<li class="options" data-argument="Title">Title</li>
					<li class="options" data-argument="Popularity">Popularity</li>
					<li class="options" data-argument="ReleaseDate">Release Date</li>
					<li id="genreOption" class="options">
						Genre >
						<ol id="GenreList" class="nested-dropdown">
							@foreach (var movie in Model)
							{
								foreach (var genre in movie.Genres)
								{
									<li class="options genreselect" data-genreselected="@genre.Name">@genre.Name</li>
								}
							}
						</ol>
					</li>
				</ul>
				<input type="text" class="form-control " id="inputfield" placeholder="Search in all categories" />

			</div>
		</div>
	</div>
	<div class="watchlist-container">
		@foreach (var item in Model)
		{
			<div class="search-resultwatchlist">
				<img src="@item.Poster">
				<div class="search-card">
				<div class="top-column">
					<a class="highlight" asp-controller="Movie" asp-action="Details" asp-route-id="@item.MovieId">
						@item.Title
					</a>

				</div>
					
			


				<form asp-controller="Movie" asp-action="ManageWatchList" method="post">
					<input type="hidden" name="movieId" value="@item.MovieId" />
					<div class="bottom-right">
						<p class="highlight"> Runtime: <span class="highlight-reset">@item.Runtime minutes</span></p>
						@if (item.ReleaseDate != null)
						{
							<p class="highlight"> Release Date: <span class="highlight-reset">@item.ReleaseDate.Value.ToShortDateString()</span></p>
						}
						<input type="submit" class="btn btn-danger " value="Remove from watchlist">

					</div>
				</form>
			</div>
				</div>

			<br />
		}
	</div>
	@if (Model.Length > 1)
	{
		<div class="random-box">

			<h4>Can't decide?</h4>
			<a class="btn btn-primary btn-random" asp-controller="Movie" asp-action="Details"
			   asp-route-id="@Model[Random.Shared.Next(Model.Length)].MovieId">Pick for me!</a>
		</div>
	}
	<script>
		$(document).ready(function () {
			let select = $("#select-click");
			let list = $("#list");
			let selectText = $("#selectText");
			let inputfield = $("#inputfield");
			let genreList = $("#GenreList");

			select.click(function () {
				list.toggleClass("open");
				if (list.hasClass("open")) {
					list.css("overflow", "visible");
				} else {
					list.css("overflow", "hidden");
				}
			});

			$(".options").click(function (event) {
				let argument = $(this).data("argument");
				let genreselected = $(this).data("genreselected");
				console.log(argument)
				console.log(genreselected)

				if (this.id === 'genreOption') {
					console.log("genreOption clicked");
					event.stopPropagation();
					genreList.toggle();
					return;
				}

				selectText.html(this.innerHTML);
				inputfield.attr("placeholder", "Search for " + selectText.html());

				if (argument === null || argument === undefined) {
					let url = "/Watchlist?genreselected=" + genreselected;
					window.location.href = url;
				}
				else {
					let url = "/Watchlist?argument=" + argument;
					window.location.href = url;
				}
			});

			$("#genreOption").mouseleave(function () {
				genreList.hide();
			});


		});

		const genreList = document.getElementById('GenreList');
		const genres = Array.from(genreList.getElementsByClassName('options'));

		const uniqueGenres = new Set();
		genres.forEach(genre => {
			const genreName = genre.textContent.trim();
			if (!uniqueGenres.has(genreName)) {
				uniqueGenres.add(genreName);
			} else {
				genre.remove();
			}
		});

	</script>
</body>
</html>
