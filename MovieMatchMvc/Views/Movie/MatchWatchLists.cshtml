@model List<MovieMatchMvc.Views.Movie.WatchlistVM>
<div class="text-center">
<form class="form-container" asp-action="MatchWatchListsPost" asp-controller="Movie">
    <h2>Who's Your Friend?</h2>
    <div class="form-group form-buddylist">
        <input type="text" class="form-control" placeholder="Search" id="username" name="username" required />
        <button id="matchButton" type="submit" class="btn btn-primary">Match!</button>
    </div>
</form>
</div>
@if (ViewBag.OtherUsername != null)
{

	<h2 style="color: antiquewhite; text-align: center;">Matching with @ViewBag.OtherUsername</h2>
	<div class="buddy-search-container">
		<div class="buddy-carousel">
			@if (Model == null)
			{
				<p style="text-align: center;">No common movies found. Consider adding more films to your list or stepping out of your comfort zone</p>
			}
			else
			{
				@foreach (var movie in Model)
				{
					<div class="buddy-search-card">
						@* <a class="details-link disabled-link" asp-action="Details" asp-controller="Movie" asp-route-id="@movie.MovieId"> *@
							<img src="@movie.Poster" alt="@movie.Title">
						@* </a> *@
					</div>
				}
			}
		</div>
	</div>
}
else
{
	<div style="text-align: center;">
		<p style=" color: red;">The user @ViewBag.OtherUsername does not exist! Try again!</p>
	</div>
}


@section Scripts {
    <script>

        function scrollToCarousel() {
            // Delay the scroll because we're submitting the form
            setTimeout(function () {
                // Scroll to the element with ID "carousel-section"
                const carousel = document.getElementById('buddy-section');
                carousel.scrollIntoView({ behavior: 'smooth' });
            }, 500);
        }
        (function () {
            "use strict";

            var carousel = document.querySelector('.buddy-carousel'),
                slider = document.querySelectorAll('.buddy-search-card'),
                currIndex = 0;

                   function updateActiveItem() {
                // Check if the number of items is 1 or 2
                if (slider.length === 1 || slider.length === 2) {
                    for (let i = 0; i < slider.length; i++) {
                        let item = slider[i];
                        item.classList.add('two-active');
                        item.classList.remove('greyscale');
                    }
                } else {
                    for (let i = 0; i < slider.length; i++) {
                        let item = slider[i];
                        if (i === currIndex) {
                            item.classList.add('active');
                            item.classList.remove('hidden');
                            item.classList.remove('greyscale'); // Remove greyscale from the main item
                        } else {
                            item.classList.remove('active');

                            item.classList.add('greyscale'); // Add greyscale to non-main items
                        }
                    }
                }
            }

            function move() {
                let prevIndex = (currIndex === 0) ? slider.length - 1 : currIndex - 1;
                let nextIndex = (currIndex === slider.length - 1) ? 0 : currIndex + 1;

                slider[prevIndex].style.order = 1;
                slider[currIndex].style.order = 2;
                slider[nextIndex].style.order = 3;

                for (let i = 0; i < slider.length; i++) {
                    if (i !== prevIndex && i !== currIndex && i !== nextIndex) {
                        slider[i].style.order = 4;
                    }
                }

                updateActiveItem();
            }

            function navigateToCard(event) {
                const clickedCard = event.currentTarget;
                currIndex = Array.from(slider).indexOf(clickedCard);
                move();
            }

            function bindEvents() {
                for (let i = 0; i < slider.length; i++) {
                    slider[i].addEventListener('click', navigateToCard);
                }
            }

            move();
            bindEvents();
        })();
    </script>
}
