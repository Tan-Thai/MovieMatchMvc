@model List<MovieMatchMvc.Views.Movie.WatchlistVM>

<form class="form-container" asp-action="MatchWatchListsPost" asp-controller="Movie">
    <h2>Who's Your Friend?</h2>
    <div class="form-group form-buddylist">
        <input type="text" class="form-control" id="username" name="username" required />
        <button type="submit" class="btn btn-primary">Match!</button>
    </div>
</form>

<h2 style="color: antiquewhite">Matching with @ViewBag.OtherUsername</h2>
<div class="buddy-search-container">
    <div class="buddy-carousel">
        @if (Model == null)
        {
            <p>No common movies found. Consider adding more films to your list or stepping out of your comfort zone</p>
        }
        else
        {
            @foreach (var movie in Model)
            {
                <div class="buddy-search-card">
                    <a class="details-link disabled-link" asp-action="Details" asp-controller="Movie" asp-route-id="@movie.MovieId">
                        <img src="@movie.Poster" alt="@movie.Title">
                    </a>
                </div>
            }
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initially, disable click on links
            $('a.disabled-link').on('click', function (event) {
                event.preventDefault();
            });

            function calculateOpacity(degree) {
                degree = degree % 360;
                if (degree < 0) degree += 360;
                let opacity = Math.abs(degree - 180) / 180;
                return opacity;
            }

            // Function to set main card's link as active or inactive based on its degree
            function setMainCardLink() {
                $(".buddy-search-card").each(function () {
                    var degree = parseInt($(this).attr("data-degree"), 10) % 360;
                    if (degree < 0) degree += 360;

                    if (degree === 0) {
                        $(this).find('a.details-link').off('click').removeClass('disabled-link');
                    } else {
                        $(this).find('a.details-link').on('click', function (event) {
                            event.preventDefault();
                        }).addClass('disabled-link');
                    }
                });
            }

            var degree = 0;
            $(".buddy-carousel .buddy-search-card").each(function () {
                var opacity = calculateOpacity(degree);
                $(this).attr("data-degree", degree);
                $(this).css({
                    "transform": "rotateY(" + degree + "deg) translateZ(300px)",
                    "opacity": opacity
                });
                degree += 60;
            });
            setMainCardLink();

            $(".buddy-search-card").on("click", function (e) {
                var $card = $(this);
                var degree = parseInt($card.attr("data-degree"), 10) % 360;

                if (degree === 0) {
                    return; // Let the default action happen (go to details)
                }

                // Prevent the default action
                e.preventDefault();

                // Calculate the clicked side of the card
                var offset = $card.offset();
                var x = e.pageX - offset.left;

                console.log("Card width:", $card.width());
                console.log("e.pageX:", e.pageX);
                console.log("Card offset left:", offset.left);
                console.log("CO right:", offset.right)
                console.log("Calculated x:", x);

                if (x < $card.width() / 2) {
                     console.log("Going left"); 
                    rotate("p"); // rotate to the previous card
                } else {
                    console.log("Going right");
                    rotate("n"); // rotate to the next card
                }
            });

            function rotate(direction) {
                var rotationAmount = (direction === "n") ? -60 : 60;

                $(".buddy-carousel .buddy-search-card").each(function () {
                    var el = $(this);
                    var originalDegree = parseInt(el.attr("data-degree"), 10);
                    var newDegree = (originalDegree + rotationAmount) % 360;

                    if (newDegree < 0) {
                        newDegree += 360;
                    }

                    var newOpacity = calculateOpacity(newDegree);
                    console.log("New degree:", newDegree)

                    el.css({
                        "transform": "rotateY(" + newDegree + "deg) translateZ(300px)",
                        "opacity": newOpacity
                    });

                    el.attr("data-degree", newDegree);
                });

                setMainCardLink();
            }
        });
    </script>
}
